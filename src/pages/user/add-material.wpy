<template>
  <view class="container">
    <view class="title">
      <view class="inline linelogo red"></view>
      <view class="inline linelogo yellow"></view>
      <view class="inline number">案件编号：12D8277F8239V</view>
    </view>
    <view class="bottom-line">
      <picker range="{{ types }}" range-key="name" @change="handleTypeChange">
        <view class="zan-cell zan-cell--access">
          <view class="zan-cell__hd zan-field__title">请选择材料类型</view>
          <view class="zan-cell__bd">
            <view wx:if="{{ typeName }}" style="text-align: center;" class="gray-dark">{{ typeName }}</view>
          </view>
          <view class="zan-cell__ft"></view>
        </view>
      </picker>
    </view>
    <!-- <view wx:if='{{!isShow}}'  class="zan-panel no-bd--top no-mg">
      <picker  range="{{ matertypes }}"  wx:if='{{!isNone}}' range-key="name" @change="NameChange">
        <view class="zan-cell zan-cell--access">
          <view class="zan-cell__hd zan-field__title">材料名称</view>
          <view class="zan-cell__bd">
            <view wx:if="{{ materName }}" class="gray-dark">{{ materName }}</view>
            <view wx:else class="gray-dark">请选择</view>
          </view>
          <view class="zan-cell__ft"></view>
        </view>
      </picker>
    </view> -->

    <view class="zan-panel no-bd--btm" style="padding: 15px 0">
      <img-picker
        :list.sync="imgs"
        :readonly.sync="loading"
        @onPicker.user="handlePickerImg"
        @onRemove.user="handleRemoveImg"
      ></img-picker>
      <view class="content-padded">
        <view><text>\n</text></view>
        <view class="zan-row">
          <view class="zan-col zan-col-20 zan-col-offset-2">
            <button class="zan-btn zan-btn--primary {{ loading ? 'zan-btn--loading' : '' }}" disabled="{{ loading }}" @tap="handleSubmit">
              <text class="icon icon-plus"></text>
              <text>添加</text>
            </button>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import ImgPicker from '@/components/img-picker'
import {validateFile} from '@/utils/utils'

export default class MaterialAdd extends wepy.page {
  config = {
    navigationBarTitleText: '添加证据材料'
  }

  components = {
    'img-picker': ImgPicker
  }

  data = {
    // caseId: '',
    types: [{
      name: '身份证明',
      code: '1'
    }, {
      name: '证据清单',
      code: '2'
    }, {
      name: '文书材料',
      code: '3'
    }, {
      name: '其他',
      code: '4'
    }],
    typeName: '',
    // matertypes: [],
    // typeIndex: '',
    // nameIndex: '',
    // typeCode: '',
    imgs: [],
    // fileIds: [],
    // userInfo: {},
    // loading: false,
    // isBack: false,
    // materName: '',
    // disabled: false,
    // req: {
    //   addressName: '',
    //   areasCode: '',
    //   address: ''
    // },
    // isShow: '',
    // isNone: true,
    // allData: {}
  }

  computed = {
    // typeName() {
    //   const item = this.types[this.typeIndex]
    //   return item ? item.name : ''
    // },
    // materName() {
    //   if (this.matertypes) {
    //     const item = this.matertypes[this.nameIndex]
    //     return item ? item.name : ''
    //   }
    // }
  }

  methods = {
    handleTypeChange({detail}) {
      console.log(detail)
      this.typeName = this.types[detail.value].name
      // this.typeIndex = detail.value
      // this.typeCode = this.types[this.typeIndex].code
      // if (!this.isShow) {
      //   this.nameIndex = ''
      //   let childCode = this.types[detail.value].code
      //   if (this.allData.materialSubTypes[childCode]) {
      //     this.matertypes = this.allData.materialSubTypes[childCode]
      //     this.isNone = false
      //   } else {
      //     this.matertypes = []
      //     this.isNone = true
      //   }
      // }
      // this.$apply()
    },
    // NameChange({detail}) {
    //   this.nameIndex = detail.value
    // },
    // 选择一张图片
    handlePickerImg() {
      wx.chooseImage({
        success: ({tempFiles}) => {
          if (validateFile(tempFiles)) {
            this.imgs = this.imgs.concat(tempFiles)
            this.$apply()
          }
        }
      })
    },
    // 移除一张图片
    handleRemoveImg(index) {
      this.imgs.splice(index, 1)
    },
    // handleSubmit() {
    //   if (this.typeIndex === '') {
    //     return wx.showToast({title: '请选择材料类型', icon: 'none', duration: 3e3})
    //   }
    //
    //   if (!this.isShow && this.matertypes.length > 0 && !this.nameIndex) {
    //     return wx.showToast({title: '请选择材料名称', icon: 'none', duration: 3e3})
    //   }
    //
    //   if (this.imgs.length === 0) {
    //     return wx.showToast({title: '请添加证据材料', icon: 'none', duration: 3e3})
    //   }
    //
    //   for (let i = 0; i < this.imgs.length; i++) {
    //     if (this.imgs[i].picName === undefined) {
    //       wx.showToast({title: '请填写文件名', icon: 'none', duration: 3e3})
    //       this.loading = false
    //       return false
    //     }
    //   }
    //   this.loading = true
    //   wx.showLoading({title: '提交中...'})
    //
    //   let newEviArr = getItemSync('evidence')
    //   let Evidence = []
    //   if (!newEviArr) newEviArr = []
    //   let count = 0
    //   let countT = 0
    //   this.imgs.map((item) => {
    //     uploadAvatar({
    //       filePath: item.path,
    //       name: 'file',
    //       formData: {
    //         'isView': 'VIEW',
    //         'name': 'xx.png',
    //         'mimeType': 'image/png'
    //       },
    //     }).then(({fileId}) => {
    //       if (this.isShow) { // 判断是否是诉讼
    //         Evidence.push({fileId: fileId, picName: item.picName, typeName: this.typeName, typeCode: this.typeCode, previewUrl: item.path})
    //         count = count + 1
    //         if (count >= this.imgs.length) {
    //           Evidence = newEviArr.concat(Evidence)
    //           setItem('evidence', Evidence)
    //           this.loading = false
    //           wx.hideLoading()
    //           this.$apply()
    //           wx.navigateBack()
    //         }
    //       } else {
    //         // 调解提交
    //         let sign = ''
    //         if (this.matertypes) {
    //           sign = this.nameIndex ? this.matertypes[this.nameIndex].code : ''
    //         }
    //         dossierUpload({
    //           caseId: this.caseId,
    //           categoryMiddle: this.types[this.typeIndex].code,
    //           files: [{
    //             fileId: fileId,
    //             fileName: item.picName
    //           }],
    //           fileType: '',
    //           meetingId: 99,
    //           sign: sign
    //         }).then(data => {
    //           countT = countT + 1
    //           if (countT >= this.imgs.length) {
    //             wx.hideLoading()
    //             this.loading = false
    //             if (this.isBack) {
    //               wx.navigateBack({
    //                 delta: 1
    //               })
    //             } else {
    //               wx.redirectTo({
    //                 url: '/pages/user/my-mediate'
    //               })
    //             }
    //           }
    //         })
    //       }
    //       this.$apply()
    //     }).catch((e) => {
    //       console.log(e)
    //       wx.hideLoading()
    //       this.loading = false
    //       this.$apply()
    //     })
    //   })
    //   this.loading = false
    //   this.$apply()
    // }
  }
  onLoad({caseid, back, isShow}) {
    // this.caseId = caseid
    // this.isBack = !!back
    // this.isShow = isShow
    // let _this = this
    // // 获取诉讼基础信息
    // if (isShow) {
    //   getlitigationInfo().then((data = {}) => {
    //     _this.types = data.suitMaterialType
    //     _this.$apply()
    //
    //   }).catch((error = '') => {
    //
    //   })
    //   return
    // }
    //
    // getMaterialType({lawCaseId: caseid}).then((data = {}) => {
    //   this.allData = data
    //   this.types = data.materialTypes
    //   this.matertypes = data.materialSubTypes.IDENTITY_CERTIFICATE
    //   this.$apply()
    // }).catch((error = '') => {
    //   console.log(error)
    // })

  }

  onUnload() {
    // 清除缓存
    // this.isShow = ''

  }
}
</script>

<style lang="scss" type="text/scss">
  @import '../../styles/variables.scss';
  .title {
    width: 100%;
    height: 80rpx;
    background-color: #E8E8E8;
  }
  .inline {
    display: inline-block;
  }
  .linelogo {
    width: 10rpx;
    height: 40rpx;
    border-radius: 5rpx;
    margin-left: 6rpx;
    position: relative;
    top: 50%;
    left: 30rpx;
    transform: translate(0,-100%) rotate(20deg);
    vertical-align: middle;
  }
  .red {
    background-color: #AD3320;
  }
  .yellow {
    background-color: #DB9946;
  }
  .number {
    line-height: 80rpx;
    margin-left: 50rpx;
    vertical-align: middle;
  }
  .bottom-line {
    border-bottom: 1rpx solid #E8E8E8;
  }
  // .gray-dark {
  //   text-align: right;
  // }
</style>
