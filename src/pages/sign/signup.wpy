<template>
  <view class="container">
    <view class="zan-panel" style="margin-top: 0">
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>姓名：</view>
        <input class="zan-field__input zan-cell__bd" value="{{username}}" placeholder="请输入您的姓名" type="text" @input="userInput('username')" />
      </view>
      <view class="zan-cell zan-cell--access">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>证件类型：</view>
        <view class="zan-cell__bd">
          <view >居民身份证</view>
          <!-- <view wx:else class="gray-dark text-rgt">请选择</view> -->
        </view>
        <view class="zan-cell__ft"></view>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>证件号码：</view>
        <input class="zan-field__input zan-cell__bd" value="{{idcard}}" placeholder="请输入您的身份证号" type="idcard" @input="userInput('idcard')" />
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>户籍地址：</view>
        <input class="zan-field__input zan-cell__bd" value="{{adress}}" placeholder="请输入您的户籍地址" @input="userInput('adress')" />
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>电子邮箱：</view>
        <input class="zan-field__input zan-cell__bd" value="{{email}}" placeholder="请输入您的电子邮箱" @input="userInput('email')" />
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>登录密码：</view>
        <input class="zan-field__input zan-cell__bd" placeholder="8-12位数字、字母" type="password" @input="userInput('pass')" maxlength="16" />
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>确认密码：</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请与上方密码保持一致" type="password" @input="userInput('passconfirm')" maxlength="16" />
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>手机号：</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请输入手机号" maxlength="11" type="number" @input="userInput('phone')" />
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title"><text class="red">*</text>验证码：</view>
        <input class="zan-field__input zan-cell__bd" placeholder="请输入验证码"  type="number" @input="userInput('msg')" maxlength="6"/>
        <view class="zan-cell__ft">
          <button class="zan-btn zan-btn&#45;&#45;mini zan-btn&#45;&#45;primary" @tap="sendmessg" disabled="{{disable}}">{{getmsg}}</button>
        </view>
      </view>
    </view>
    <view class="rad-box">
      <radio class="rad" color='#AD3320'></radio>已阅读同意<text class="red">《用户服务协议》</text>
    </view>
    <view style="margin-top: 30px">
      <view class="btnbox">
        <button class="zan-btn zan-btn--primary {{ loading ? 'zan-btn--loading' : '' }}" disabled="{{ loading }}" @tap="submit">提交</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {validate, patterns} from '@/utils/validate'
  // import {saveToken, saveUserInfo} from '@/utils/utils'
  // import {getVerifyCode, userSignup, checkUserIsRegister, userSignin, searchCommonUser, getPublicKey} from '@/api/sign'
  // import {RZH5URL} from '@/utils/constants'
  import {setItem} from '@/utils/storage'
  // let RSA = require('../../utils/jsencrypt.js')
  // let publicKey = ''

  export default class SignUp extends wepy.page {
    config = {
      navigationBarTitleText: '注册'
    }
    data = {
      phone: '',
      msg: '',
      pass: '',
      email: '',
      passconfirm: '',
      adress: '',
      username: '',
      idcard: '',
      getmsg: '获取验证码',
      disable: false,
      loading: false,
      pickerShow: false,
      address: [],
      agreementUrl: ''
    }
    computed={
      // addressName() {
      //   return this.address.map(({name}) => name).join('')
      // }
    }
    onLoad() {
      // this.agreementUrl = encodeURIComponent(`${RZH5URL}mobile/webview.html#/registerAgree`)
      // getPublicKey().then((data) => {
      //   publicKey = data
      //   console.log(publicKey)
      // })
    }
    onShareAppMessage(res) {
      if (res.from === 'button') {
        // 来自页面内转发按钮
        console.log(res.target)
      }
      return {
        title: '北京法院多元调解与速裁平台',
        imageUrl: '/images/home/icon.jpg',
        path: '/pages/home/home'
      }
    }
    // RSAEncrypt(data) {
    //   let encryptObj = new RSA.JSEncrypt()
    //   encryptObj.setPublicKey(publicKey)
    //   let data2 = encryptObj.encrypt(data)
    //   return data2
    // }
    methods = {
      // 以下为用户输入事件
      userInput(field, {detail}) {
        this[field] = detail.value.trim()
      },
      // 发送验证码
      // sendmessg() {
      //   if (this.validate(true)) {
      //     wx.showLoading()
      //     getVerifyCode({
      //       codeType: 'SMS_REGISTER_USER_CODE',
      //       mobilePhone: this.phone
      //     })
      //       .then(() => {
      //         wx.hideLoading()
      //         wx.showToast({title: '短信验证码已发送至您的手机，请注意查收！', icon: 'none'})
      //         this.countdown()
      //       })
      //       .catch((e) => {
      //         // wx.showToast({title: e.message, icon: 'none'})
      //         wx.hideLoading()
      //       })
      //   }
      // },
      // 点击注册按钮
      submit() {
        if (this.validate()) {
          this.loading = true
          setItem('name', this.phone)
          setItem('pwd', this.pass)
          // wx.showLoading()
          // checkUserIsRegister({
          //   mobilePhone: this.phone
          // }).then((data) => {
          //   if (data === true) { // 返回 true 是表示  手机号 已经存在
          //     wx.hideLoading()
          //     this.loading = false
          //     this.$apply()
          //     wx.showToast({
          //       title: data.message,
          //       icon: 'none',
          //       duration: 2000
          //     })
          //   } else if (data === false) { // 返回 false 是表示手机号未注册
          //     userSignup({
          //       mobilePhone: this.phone,
          //       validateCode: this.msg,
          //       password: this.RSAEncrypt(this.pass),
          //       publicKey: publicKey
          //     }).then(data => {
          //       // 注册成功 调用登录接口 直接让默认登录 获取token
          //       userSignin({
          //         mobilePhone: this.phone,
          //         password: this.RSAEncrypt(this.pass),
          //         publicKey: publicKey
          //       })
          //         .then((data = {}) => {
          //           this.loading = false
          //           wx.hideLoading()
          //           console.log(data)
          //           // 登录成功 保存token
          //           saveToken(data.authToken)
          //           // 保存用户信息
          //           searchCommonUser().then((data = {}) => {
          //             console.log(data)
          //             saveUserInfo(data)
          //           })
          //           wx.redirectTo({  // 登录完成跳转 首页
          //             url: '/pages/home/home'
          //           })
          //         })
          //         .catch(() => {
          //           this.loading = false
          //           wx.hideLoading()
          //           this.$apply()
          //         })
          //     }).catch(() => {
          //       this.loading = false
          //       wx.hideLoading()
          //       this.$apply()
          //     })
          //   } else {
          //     wx.hideLoading()
          //     this.loading = false
          //     this.$apply()
          //   }
          // })
          this.loading = false
          this.$apply()
          wx.redirectTo({  // 登录完成跳转 首页
            url: '/pages/home/home'
          })
        }
      }
    }
    // 倒计时
    // countdown(t = 60) {
    //   if (--t > 0) {
    //     this.disable = true
    //     this.getmsg = `${t}s后再次发送`
    //     setTimeout(() => this.countdown(t), 1000)
    //   } else {
    //     this.getmsg = '再次获取验证码'
    //     this.disable = false
    //   }
    //   this.$apply()
    // }

    validate(isBreak = false) {
      let valid = validate({
        phone: {
          required: '请输入手机号',
          pattern: patterns.phone,
          message: '请输入正确的手机号'
        }
      }, this)

      if (isBreak) {
        return valid
      }
      //  更改
      if (valid) {
        valid = validate({
          // msg: {
          //   required: '请输入验证码',
          // },
          pass: {
            required: '请输入8~16位数字、字母，字母需小写',
            patterns: [{
              pattern: patterns.passwd,
              message: '请输入8~16位数字、字母，字母需小写'
            }, {
              // 不能是大写字母
              pattern: val => !/[A-Z]/.test(val),
              message: '请输入8~16位数字、字母，字母需小写'
            }]
          }
        }, this)
      }
      return valid
    }
  }
</script>

<style lang="scss" type="text/scss">
  @import '../../styles/variables.scss';
  page {
    position: relative;
    height: 100%;
  }
  .container{
    background-color:$white;
  }
  .text{
    font-size: 10px;
    padding: 10px 15px;
    text-align: center;
  }
  .zan-btn--mini{
    font-size: 12px;
    line-height:26px;
    height:28px;
  }
  navigator {
    display:inline-block;
    color: #0650ba;
  }

  .topbor{
    border-top: 10px solid $background-color;
  }
  .zan-field {
    padding: 0 15px;
  }
  .zan-field__title {
    color: #333;
    min-width: 65px;
    padding-right: 10px;
    font-size: 28rpx;
    font-weight: bold;
  }
  .text-right{
    text-align: right;
  }
  .zan-field__input {
    flex: 1;
    line-height: 70rpx;
    padding: 10px 0;
    min-height: 70rpx;
    height: 70rpx;
    font-size: 28rpx;
  }
  .btnbox{
    width: 80%;
    margin: 10px auto;
  }
  .rad-box {
    margin-top: 22rpx;
    vertical-align: middle;
  }
  .rad {
    transform:scale(0.6);
  }
  .red {
    color:  #AD3320;
  }
</style>
