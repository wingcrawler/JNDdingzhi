<template>
  <view class="container">
    <view class="dlbox">
      <view class="content-padded">
        <view class="zan-cell zan-field" style="justify-content: space-between;border: none">
          <view class="tx">
            <image src="/images/sign/avatar_default.png"></image>
          </view>
          <image class="addbtn" src="/images/sign/iconadd.png"></image>
        </view>
        <view class="zan-cell zan-field">
          <input class="zan-field__input zan-cell__bd" placeholder="请输入昵称" maxlength="11" @input="userInput('phone')" type="number" />
        </view>
        <view class="zan-cell zan-field">
          <input class="zan-field__input zan-cell__bd" placeholder="请输入手机号" maxlength="11" @input="userInput('phone')" type="number" />
        </view>
        <view class="zan-cell zan-field" style="padding: 0;">

          <input style="padding:8px 10px;" class="zan-field__input zan-cell__bd" placeholder="请输入验证码" type="number" @input="userInput('msg')" maxlength="6"/>
          <view class="zan-cell__ft">
            <button class="zan-btn bgcolor" disabled="{{disable}}" @tap="sendmessg">{{getmsg}}</button>
          </view>
        </view>
        <view class="zan-cell zan-field">
          <input class="zan-field__input zan-cell__bd" placeholder="请输入密码" type="number" @input="userInput('pass')" maxlength="20"/>
        </view>
        <view class="zan-cell zan-field">
          <input class="zan-field__input zan-cell__bd" placeholder="确认密码" type="number" @input="userInput('passtow')" maxlength="20"/>
        </view>
        <view class="zan-cell zan-field">
          <input class="zan-field__input zan-cell__bd" placeholder="请输入邮箱" @input="userInput('email')"/>
        </view>

      </view>
      <view class="btnbox">
        <button class="zan-btn zan-btn--primary {{ loading ? 'zan-btn--loading' : '' }}" disabled="{{ loading }}" @tap="modifypass">注册</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {validate, patterns} from '@/utils/validate'
  // import {saveToken, saveUserInfo} from '@/utils/utils'
  // import {getVerifyCode, userSignup, checkUserIsRegister, userSignin, searchCommonUser, getPublicKey} from '@/api/sign'
  // import {RZH5URL} from '@/utils/constants'
  import {setItem} from '@/utils/storage'
  export default class SignUp extends wepy.page {
    config = {
      navigationBarTitleText: '注册'
    }
    data = {
      phone: '',
      msg: '',
      pass: '',
      email: '',
      passconfirm: '',
      adress: '',
      username: '',
      idcard: '',
      getmsg: '获取验证码',
      disable: false,
      loading: false,
      pickerShow: false,
      address: [],
      agreementUrl: ''
    }
    computed={
      // addressName() {
      //   return this.address.map(({name}) => name).join('')
      // }
    }
    onLoad() {
    }
    methods = {
      // 以下为用户输入事件
      userInput(field, {detail}) {
        this[field] = detail.value.trim()
      },
      // 发送验证码
      // sendmessg() {
      //   if (this.validate(true)) {
      //     wx.showLoading()
      //     getVerifyCode({
      //       codeType: 'SMS_REGISTER_USER_CODE',
      //       mobilePhone: this.phone
      //     })
      //       .then(() => {
      //         wx.hideLoading()
      //         wx.showToast({title: '短信验证码已发送至您的手机，请注意查收！', icon: 'none'})
      //         this.countdown()
      //       })
      //       .catch((e) => {
      //         // wx.showToast({title: e.message, icon: 'none'})
      //         wx.hideLoading()
      //       })
      //   }
      // },
      // 点击注册按钮
      submit() {
        if (this.validate()) {
          this.loading = true
          setItem('name', this.phone)
          setItem('pwd', this.pass)
          // wx.showLoading()
          // checkUserIsRegister({
          //   mobilePhone: this.phone
          // }).then((data) => {
          //   if (data === true) { // 返回 true 是表示  手机号 已经存在
          //     wx.hideLoading()
          //     this.loading = false
          //     this.$apply()
          //     wx.showToast({
          //       title: data.message,
          //       icon: 'none',
          //       duration: 2000
          //     })
          //   } else if (data === false) { // 返回 false 是表示手机号未注册
          //     userSignup({
          //       mobilePhone: this.phone,
          //       validateCode: this.msg,
          //       password: this.RSAEncrypt(this.pass),
          //       publicKey: publicKey
          //     }).then(data => {
          //       // 注册成功 调用登录接口 直接让默认登录 获取token
          //       userSignin({
          //         mobilePhone: this.phone,
          //         password: this.RSAEncrypt(this.pass),
          //         publicKey: publicKey
          //       })
          //         .then((data = {}) => {
          //           this.loading = false
          //           wx.hideLoading()
          //           console.log(data)
          //           // 登录成功 保存token
          //           saveToken(data.authToken)
          //           // 保存用户信息
          //           searchCommonUser().then((data = {}) => {
          //             console.log(data)
          //             saveUserInfo(data)
          //           })
          //           wx.redirectTo({  // 登录完成跳转 首页
          //             url: '/pages/home/home'
          //           })
          //         })
          //         .catch(() => {
          //           this.loading = false
          //           wx.hideLoading()
          //           this.$apply()
          //         })
          //     }).catch(() => {
          //       this.loading = false
          //       wx.hideLoading()
          //       this.$apply()
          //     })
          //   } else {
          //     wx.hideLoading()
          //     this.loading = false
          //     this.$apply()
          //   }
          // })
          this.loading = false
          this.$apply()
          wx.redirectTo({  // 登录完成跳转 首页
            url: '/pages/home/home'
          })
        }
      }
    }
    // 倒计时
    // countdown(t = 60) {
    //   if (--t > 0) {
    //     this.disable = true
    //     this.getmsg = `${t}s后再次发送`
    //     setTimeout(() => this.countdown(t), 1000)
    //   } else {
    //     this.getmsg = '再次获取验证码'
    //     this.disable = false
    //   }
    //   this.$apply()
    // }

    validate(isBreak = false) {
      let valid = validate({
        phone: {
          required: '请输入手机号',
          pattern: patterns.phone,
          message: '请输入正确的手机号'
        }
      }, this)

      if (isBreak) {
        return valid
      }
      //  更改
      if (valid) {
        valid = validate({
          // msg: {
          //   required: '请输入验证码',
          // },
          pass: {
            required: '请输入8~16位数字、字母，字母需小写',
            patterns: [{
              pattern: patterns.passwd,
              message: '请输入8~16位数字、字母，字母需小写'
            }, {
              // 不能是大写字母
              pattern: val => !/[A-Z]/.test(val),
              message: '请输入8~16位数字、字母，字母需小写'
            }]
          }
        }, this)
      }
      return valid
    }
  }
</script>

<style lang="scss" type="text/scss">
  @import '../../styles/variables.scss';
  page {
    position: relative;
    height: 100%;
    .container {
      padding-top: 60rpx;
      padding-bottom: 60rpx;
    }
    .dlbox {
      padding-top: 50rpx;
      width: 90vw;
      box-shadow: 0px 0px 10px 0px rgba(34, 111, 200, 0.45);
      background-color: #ffffff;
      margin: 0 auto;
      border-radius: 20px;
      padding-bottom: 50rpx;
    }
    .zan-btn--mini{
      font-size: 12px;
    }
    /*.zan-field__input {*/
    /*box-sizing: border-box;*/
    /*}*/
    .zan-field {
      padding: 8px 10px;
      border: 1px solid $gray-light;
      border-radius: 100px;
      overflow: hidden;
      margin-bottom: 30rpx;
    }
    .zan-field__title {
      color: #333;
      min-width: 65px;
      padding-right: 10px;
      font-size: 28rpx;
      font-weight: bold;
    }
    .text-right{
      text-align: right;
    }
    .btnbox{
      width: 80%;
      margin: 10px auto;
    }
    .bgcolor{
      background-color: $primary-color;
      border: none;
      color: $white;
      height:52px;
      line-height:52px;
      font-size: 12px;
      margin-bottom: 0;
      border-radius: 0;
      padding: 0 20rpx;
    }
    .zan-btn--primary {
      overflow: hidden;
      border-radius: 100px;
    }
    .tx {
      width: 130rpx;
      height: 130rpx;
      overflow: hidden;
      border-radius: 130rpx;
      image {
        width: 130rpx;
        height: 130rpx;
        display: block;
      }
    }
    .addbtn {
      width: 50rpx;
      height: 50rpx;
      display: block;
    }
  }
</style>
