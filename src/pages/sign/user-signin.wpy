<template>
  <view class="container {{fexid?'fexid':''}}">
    <view class="dlbox">
      <view class="logo">
        <open-data type="userAvatarUrl"></open-data>
      </view>
      <view class="content-padded">
          <view class="zan-cell zan-field">
            <input class="zan-field__input zan-cell__bd name"  placeholder="请输入账号" value="{{name}}" maxlength="20" type="text" @input="userInput('name')" />
          </view>
          <view class="zan-cell zan-field">
            <input password="true"  class="zan-field__input zan-cell__bd pass"
                   placeholder="请输入密码"
                   value="{{pass}}"
                   @blur="handleBlur"
                   @focus="handleFocus"
                   @input="userInput('pass')"
                   maxlength="20"
            />
          </view>
        <view class="zan-clearfix t">
          <navigator class="zan-pull-left" url="signup">去注册</navigator>
          <navigator url="forget-pass" class="zan-pull-right">忘记密码？</navigator>
        </view>
      </view>
      <view class="content-padded">
        <button class="zan-btn zan-btn--primary {{ loading ? 'zan-btn--loading' : '' }}" disabled="{{ loading }}" @tap="submit">登录</button>
      </view>
    </view>

    </view>

</template>

<script>
  import wepy from 'wepy'
  import {userSignin} from '@/api/sign' // 引入登录接口
  import {validate, patterns} from '@/utils/validate' // 用户输入表单的验证
  import {saveUserInfo, saveToken} from '@/utils/utils' // 保存登录后的token,用户信息
  import {setItem, getItem} from '@/utils/storage'

  export default class UserSignIn extends wepy.page {
    config = {
      navigationBarTitleText: '登录'
    }

    data = {
      name: '',
      pass: '',
      goBack: false,
      loading: false,
      isAndroid: false,
      fexid: false,
      changeType: 'fir',
      uuid: '',
      // hasToken: hasToken()
    }
    // 用户输入表单验证
    validate() {
      return validate({
        name: {
          required: '请输入登录账号',
        },
        pass: {
          required: '请输入8~20位数字、字母',
          patterns: [{
            pattern: patterns.passwd,
            message: '请输入8~20位数字、字母'
          }]
        }
      }, this)
    }
    onLoad({back}) {
      this.goBack = !!back
      try {
        let res = wx.getSystemInfoSync()
        let sys = res.system.indexOf('Android')
        if (sys > -1) {
          this.isAndroid = true
          this.$apply()
        }
      } catch (e) {
        // Do something when catch error
      }
      // getPublicKey().then((data) => {
      //   publicKey = data
      //   console.log(publicKey)
      // })
      this.$apply()
    }
    onShow() {
      getItem('name').then((data = {}) => {
        this.name = data.data
      }).catch(() => {
        this.name = ''
      })
      getItem('pwd').then((data = {}) => {
        this.pass = data.data
      }).catch(() => {
        this.pass = ''
      })
      // this.hasToken = hasToken()
      this.$apply()
    }
    methods = {
      handleFocus() {
        if (this.isAndroid) {
          this.fexid = true
          this.$apply()
        }
      },
      handleBlur() {
        this.fexid = false
        this.$apply()
      },
      // 用户输入
      userInput(field, {detail}) {
        this[field] = detail.value
        this.$apply()
      },
      choseTpye(type) {
        this.changeType = type
      },
      submit() {
        if (this.validate()) {
          this.loading = true
          userSignin({
            username: this.name,
            password: this.pass,
          })
            .then((data = {}) => {
              this.loading = false
              console.log(data)
              // 登录成功 保存token
              setItem('name', this.name)
              setItem('pwd', this.pass)
              saveToken(data.oken)
              // // 保存用户信息
              // console.log(userInfo)
              // saveUserInfo(userInfo)
                // 后退
              if (this.goBack) {
                wx.navigateBack()
              } else {
                wx.reLaunch({
                  url: '/pages/home/home'
                })
              }
            }).catch((err) => {
              console.log(err.authentication_message[0])
              if (err.authentication_message[0] === 'authenticationFailure.EmptyResultDataAccessException') {
                this.loading = false
                this.$apply()
                return wx.showToast({title: '未查到此账号', icon: 'none'})
              }
              wx.showToast({title: err.authentication_message[0], icon: 'none'})
              this.loading = false
              this.$apply()
            })
        }
      }
    }
  }

</script>

<style lang="scss" type="text/scss">
  @import "../../styles/variables";
  page{
    width: 100vm;
  }
  .container {
    padding-top: 140rpx;
  }
  .logo {
    width: 214rpx;
    height: 214rpx;
    margin: 0 auto 70rpx;
    display: block;
    border-radius: 300rpx;
    border: 2px solid $primary-color;
    overflow: hidden;
  }
  .fexid{
    position: absolute;
    top: -100px;
    width: 100%;
  }
  .zan-field {
    padding: 8px 10px;
    border: 1px solid $gray-light;
    border-radius: 100px;
    overflow: hidden;
    margin-bottom: 30rpx;
  }
  .zan-field__input {
    padding: 3px 0;
    min-height: 30px;
    height: auto;
  }
  .dlbox {
    padding-top: 50rpx;
    width: 90vw;
    box-shadow: 0px 0px 10px 0px rgba(34, 111, 200, 0.45);
    background-color: #ffffff;
    margin: 0 auto;
    border-radius: 20px;
  }
  .zan-clearfix {
    padding: 10rpx 20rpx;
  }
  .zan-pull-left {
    color: $primary-color;
  }
  .zan-pull-right {
    color: $gray-dark;
  }
  .zan-btn--primary {
    overflow: hidden;
    border-radius: 100px;
  }
  .fixed-bar--footer {
    position: fixed;
    bottom: 40rpx;
    width: 100%;
    box-sizing:border-box;
  }
</style>
